from django.core.management.base import BaseCommand
from core.models import Categoria

class Command(BaseCommand):
    help = 'Actualiza las categor√≠as con nombres y descripciones reales'

    def handle(self, *args, **options):
        # Diccionario con categor√≠as reales
        categorias_reales = {
            1: {
                'nombre': 'Tecnolog√≠a',
                'descripcion': 'Dispositivos electr√≥nicos, gadgets y accesorios tecnol√≥gicos'
            },
            2: {
                'nombre': 'Moda y Accesorios',
                'descripcion': 'Ropa, calzado, joyer√≠a y complementos de moda'
            },
            3: {
                'nombre': 'Hogar y Decoraci√≥n',
                'descripcion': 'Art√≠culos para el hogar, decoraci√≥n y muebles'
            },
            4: {
                'nombre': 'Deportes y Aire Libre',
                'descripcion': 'Equipamiento deportivo, camping y actividades al aire libre'
            },
            5: {
                'nombre': 'Juguetes y Juegos',
                'descripcion': 'Juguetes, juegos de mesa y entretenimiento familiar'
            },
            6: {
                'nombre': 'Belleza y Cuidado Personal',
                'descripcion': 'Cosm√©ticos, skincare y productos de cuidado personal'
            },
            7: {
                'nombre': 'Libros y Entretenimiento',
                'descripcion': 'Libros, m√∫sica, pel√≠culas y medios de entretenimiento'
            },
            8: {
                'nombre': 'Alimentos y Bebidas',
                'descripcion': 'Comidas gourmet, bebidas y productos alimenticios especiales'
            },
            9: {
                'nombre': 'Salud y Bienestar',
                'descripcion': 'Productos para la salud, fitness y bienestar general'
            },
            10: {
                'nombre': 'Viajes y Experiencias',
                'descripcion': 'Kits de viaje, experiencias y accesorios para viajeros'
            },
            11: {
                'nombre': 'Papeleria',
                'descripcion': 'Todo lo que tenga que ver con cuadernos, l√°pices, bol√≠grafos, planners, stickers, etc.'
            },
            12: {
                'nombre': 'Aficiones y Estilo de Vida',
                'descripcion': 'Todo lo que tenga que ver con Aficiones y Estilo de Vida'
            },
            
            # Agrega m√°s seg√∫n necesites
        }

        for cat_id, cat_data in categorias_reales.items():
            try:
                categoria, created = Categoria.objects.get_or_create(
                    id_categoria=cat_id,
                    defaults={
                        'nombre_categoria': cat_data['nombre'],
                        'descripcion': cat_data['descripcion']
                    }
                )
                
                if not created:
                    # Actualizar categor√≠a existente
                    categoria.nombre_categoria = cat_data['nombre']
                    categoria.descripcion = cat_data['descripcion']
                    categoria.save()
                    self.stdout.write(f"‚úÖ Actualizada: {cat_data['nombre']}")
                else:
                    self.stdout.write(f"‚úÖ Creada: {cat_data['nombre']}")
                    
            except Exception as e:
                self.stdout.write(self.style.ERROR(f"‚ùå Error con categor√≠a {cat_id}: {e}"))

        self.stdout.write(self.style.SUCCESS("üéâ Categor√≠as actualizadas correctamente"))
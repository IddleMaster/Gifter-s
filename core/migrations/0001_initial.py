# Generated by Django 5.2.5 on 2025-09-25 04:04

import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Categoria',
            fields=[
                ('id_categoria', models.AutoField(primary_key=True, serialize=False)),
                ('nombre_categoria', models.CharField(max_length=100)),
                ('descripcion', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Marca',
            fields=[
                ('id_marca', models.AutoField(primary_key=True, serialize=False)),
                ('nombre_marca', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Pais',
            fields=[
                ('id_pais', models.AutoField(primary_key=True, serialize=False, verbose_name='ID País')),
                ('nombre_pais', models.CharField(max_length=100, unique=True, verbose_name='Nombre del País')),
            ],
            options={
                'verbose_name': 'País',
                'verbose_name_plural': 'Países',
                'db_table': 'pais',
                'ordering': ['nombre_pais'],
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('id', models.AutoField(db_column='id_usuario', primary_key=True, serialize=False)),
                ('nombre', models.CharField(default='', max_length=100)),
                ('apellido', models.CharField(default='', max_length=100)),
                ('correo', models.EmailField(default='', max_length=254, unique=True)),
                ('nombre_usuario', models.CharField(blank=True, max_length=50, unique=True)),
                ('es_admin', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('verification_token', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('token_created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Usuario',
                'verbose_name_plural': 'Usuarios',
            },
        ),
        migrations.CreateModel(
            name='Producto',
            fields=[
                ('id_producto', models.AutoField(primary_key=True, serialize=False)),
                ('nombre_producto', models.CharField(max_length=255)),
                ('descripcion', models.CharField(max_length=255)),
                ('imagen', models.ImageField(blank=True, null=True, upload_to='productos/')),
                ('id_categoria', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.categoria')),
                ('id_marca', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.marca')),
            ],
        ),
        migrations.CreateModel(
            name='Region',
            fields=[
                ('id_region', models.AutoField(primary_key=True, serialize=False, verbose_name='ID Región')),
                ('nombre_region', models.CharField(max_length=100, verbose_name='Nombre de la Región')),
                ('id_pais', models.ForeignKey(db_column='id_pais', on_delete=django.db.models.deletion.CASCADE, related_name='regiones', to='core.pais', verbose_name='País')),
            ],
            options={
                'verbose_name': 'Región',
                'verbose_name_plural': 'Regiones',
                'db_table': 'region',
                'ordering': ['nombre_region'],
            },
        ),
        migrations.CreateModel(
            name='Comuna',
            fields=[
                ('id_comuna', models.AutoField(primary_key=True, serialize=False, verbose_name='ID Comuna')),
                ('nombre_comuna', models.CharField(max_length=100, verbose_name='Nombre de la Comuna')),
                ('id_region', models.ForeignKey(db_column='id_region', on_delete=django.db.models.deletion.CASCADE, related_name='comunas', to='core.region', verbose_name='Región')),
            ],
            options={
                'verbose_name': 'Comuna',
                'verbose_name_plural': 'Comunas',
                'db_table': 'comuna',
                'ordering': ['nombre_comuna'],
            },
        ),
        migrations.CreateModel(
            name='Wishlist',
            fields=[
                ('id_wishlist', models.AutoField(primary_key=True, serialize=False, verbose_name='ID Wishlist')),
                ('nombre_wishlist', models.CharField(max_length=100, verbose_name='Nombre de la Wishlist')),
                ('es_publica', models.BooleanField(default=True, verbose_name='¿Es pública?')),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de creación')),
                ('fecha_actualizacion', models.DateTimeField(auto_now=True, verbose_name='Fecha de actualización')),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='wishlists', to=settings.AUTH_USER_MODEL, verbose_name='Usuario')),
            ],
            options={
                'verbose_name': 'Wishlist',
                'verbose_name_plural': 'Wishlists',
                'db_table': 'wishlist',
                'ordering': ['-fecha_creacion'],
            },
        ),
        migrations.CreateModel(
            name='Direccion',
            fields=[
                ('id_direccion', models.AutoField(primary_key=True, serialize=False, verbose_name='ID Dirección')),
                ('calle', models.CharField(max_length=150, verbose_name='Calle o Avenida')),
                ('numero', models.CharField(help_text='Permite "S/N" o "123A"', max_length=10, verbose_name='Número')),
                ('id_comuna', models.ForeignKey(db_column='id_comuna', on_delete=django.db.models.deletion.CASCADE, related_name='direcciones', to='core.comuna', verbose_name='Comuna')),
                ('id_usuario', models.ForeignKey(db_column='id_usuario', on_delete=django.db.models.deletion.CASCADE, related_name='direcciones', to=settings.AUTH_USER_MODEL, verbose_name='Usuario')),
            ],
            options={
                'verbose_name': 'Dirección',
                'verbose_name_plural': 'Direcciones',
                'db_table': 'direccion',
                'ordering': ['calle', 'numero'],
                'indexes': [models.Index(fields=['id_usuario'], name='idx_dir_usuario'), models.Index(fields=['id_comuna'], name='idx_dir_comuna')],
            },
        ),
        migrations.CreateModel(
            name='HistorialBusqueda',
            fields=[
                ('id_search', models.AutoField(primary_key=True, serialize=False, verbose_name='ID Búsqueda')),
                ('term', models.CharField(max_length=150, verbose_name='Término de búsqueda')),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de búsqueda')),
                ('id_user', models.ForeignKey(db_column='id_user', on_delete=django.db.models.deletion.CASCADE, related_name='historial_busquedas', to=settings.AUTH_USER_MODEL, verbose_name='Usuario')),
            ],
            options={
                'verbose_name': 'Historial de búsqueda',
                'verbose_name_plural': 'Historial de búsquedas',
                'db_table': 'HistorialBusqueda',
                'ordering': ['-fecha_creacion'],
                'indexes': [models.Index(fields=['id_user'], name='idx_histbusq_user'), models.Index(fields=['term'], name='idx_histbusq_term')],
            },
        ),
        migrations.AddIndex(
            model_name='region',
            index=models.Index(fields=['id_pais'], name='idx_region_pais'),
        ),
        migrations.AddConstraint(
            model_name='region',
            constraint=models.UniqueConstraint(fields=('nombre_region', 'id_pais'), name='uniq_region_por_pais'),
        ),
        migrations.AddIndex(
            model_name='comuna',
            index=models.Index(fields=['id_region'], name='idx_comuna_region'),
        ),
        migrations.AddConstraint(
            model_name='comuna',
            constraint=models.UniqueConstraint(fields=('nombre_comuna', 'id_region'), name='uniq_comuna_por_region'),
        ),
        migrations.AlterUniqueTogether(
            name='wishlist',
            unique_together={('usuario', 'nombre_wishlist')},
        ),
    ]

# Generated by Django 5.2.5 on 2025-09-29 23:45

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0003_participantedeevento'),
    ]

    operations = [
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id_post', models.AutoField(primary_key=True, serialize=False, verbose_name='ID Post')),
                ('contenido', models.TextField(blank=True, null=True, verbose_name='Contenido del post')),
                ('tipo_post', models.CharField(choices=[('texto', 'Texto'), ('imagen', 'Imagen'), ('video', 'Video'), ('enlace', 'Enlace')], default='texto', max_length=10, verbose_name='Tipo de post')),
                ('url_media', models.URLField(blank=True, max_length=500, null=True, verbose_name='URL de media')),
                ('es_publico', models.BooleanField(default=True, verbose_name='¿Es público?')),
                ('fecha_publicacion', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de publicación')),
                ('fecha_actualizacion', models.DateTimeField(auto_now=True, verbose_name='Fecha de actualización')),
                ('id_usuario', models.ForeignKey(db_column='id_usuario', on_delete=django.db.models.deletion.CASCADE, related_name='posts', to=settings.AUTH_USER_MODEL, verbose_name='Autor')),
            ],
            options={
                'verbose_name': 'Post',
                'verbose_name_plural': 'Posts',
                'db_table': 'post',
                'ordering': ['-fecha_publicacion'],
            },
        ),
        migrations.CreateModel(
            name='ReporteStrike',
            fields=[
                ('id_reporte', models.AutoField(primary_key=True, serialize=False, verbose_name='ID Reporte')),
                ('motivo', models.CharField(max_length=100, verbose_name='Motivo')),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de creación')),
                ('id_post', models.ForeignKey(db_column='id_post', on_delete=django.db.models.deletion.CASCADE, related_name='reportes', to='core.post', verbose_name='Publicación reportada')),
                ('id_user', models.ForeignKey(db_column='id_user', on_delete=django.db.models.deletion.CASCADE, related_name='reportes_realizados', to=settings.AUTH_USER_MODEL, verbose_name='Usuario que reporta')),
            ],
            options={
                'verbose_name': 'Reporte',
                'verbose_name_plural': 'Reportes',
                'db_table': 'Reporte_strike',
                'ordering': ['-fecha_creacion'],
            },
        ),
        migrations.CreateModel(
            name='Seguidor',
            fields=[
                ('relacion_id', models.AutoField(primary_key=True, serialize=False, verbose_name='ID Relación')),
                ('fecha_seguimiento', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de seguimiento')),
                ('seguido', models.ForeignKey(db_column='seguido_id', on_delete=django.db.models.deletion.CASCADE, related_name='seguidores', to=settings.AUTH_USER_MODEL, verbose_name='Seguido')),
                ('seguidor', models.ForeignKey(db_column='seguidor_id', on_delete=django.db.models.deletion.CASCADE, related_name='siguiendo', to=settings.AUTH_USER_MODEL, verbose_name='Seguidor')),
            ],
            options={
                'verbose_name': 'Seguidor',
                'verbose_name_plural': 'Seguidores',
                'db_table': 'seguidor',
                'ordering': ['-fecha_seguimiento'],
            },
        ),
        migrations.CreateModel(
            name='InvitacionEvento',
            fields=[
                ('invitacion_id', models.AutoField(db_column='invitacion_id', primary_key=True, serialize=False)),
                ('estado', models.CharField(choices=[('pendiente', 'pendiente'), ('aceptada', 'aceptada'), ('rechazada', 'rechazada'), ('cancelada', 'cancelada')], default='pendiente', max_length=10)),
                ('enviada_en', models.DateTimeField(auto_now_add=True)),
                ('respondida_en', models.DateTimeField(blank=True, null=True)),
                ('emisor', models.ForeignKey(db_column='emisor_id', on_delete=django.db.models.deletion.CASCADE, related_name='invitaciones_enviadas', to=settings.AUTH_USER_MODEL)),
                ('evento', models.ForeignKey(db_column='evento_id', on_delete=django.db.models.deletion.CASCADE, related_name='invitaciones', to='core.evento')),
                ('receptor', models.ForeignKey(db_column='receptor_id', on_delete=django.db.models.deletion.CASCADE, related_name='invitaciones_recibidas', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Invitación a evento',
                'verbose_name_plural': 'Invitaciones a evento',
                'db_table': 'invitacion_evento',
                'ordering': ['-enviada_en'],
                'indexes': [models.Index(fields=['evento'], name='idx_inv_evento'), models.Index(fields=['receptor', 'estado'], name='idx_inv_receptor_estado')],
            },
        ),
        migrations.AddIndex(
            model_name='post',
            index=models.Index(fields=['id_usuario'], name='idx_post_usuario'),
        ),
        migrations.AddIndex(
            model_name='post',
            index=models.Index(fields=['tipo_post'], name='idx_post_tipo'),
        ),
        migrations.AddIndex(
            model_name='post',
            index=models.Index(fields=['es_publico'], name='idx_post_publico'),
        ),
        migrations.AddIndex(
            model_name='post',
            index=models.Index(fields=['fecha_publicacion'], name='idx_post_fecha'),
        ),
        migrations.AddIndex(
            model_name='reportestrike',
            index=models.Index(fields=['id_user'], name='idx_rep_user'),
        ),
        migrations.AddIndex(
            model_name='reportestrike',
            index=models.Index(fields=['id_post'], name='idx_rep_post'),
        ),
        migrations.AddConstraint(
            model_name='reportestrike',
            constraint=models.UniqueConstraint(fields=('id_user', 'id_post'), name='uq_reporte_user_post'),
        ),
        migrations.AddIndex(
            model_name='seguidor',
            index=models.Index(fields=['seguidor'], name='idx_seguidor'),
        ),
        migrations.AddIndex(
            model_name='seguidor',
            index=models.Index(fields=['seguido'], name='idx_seguido'),
        ),
        migrations.AddConstraint(
            model_name='seguidor',
            constraint=models.UniqueConstraint(fields=('seguidor', 'seguido'), name='uniq_seguidor_seguido'),
        ),
    ]
